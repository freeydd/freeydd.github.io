<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Dom</title>
      <link href="/2019/06/06/Dom/"/>
      <url>/2019/06/06/Dom/</url>
      
        <content type="html"><![CDATA[<hr><pre><code>原生和jq的一些Dom操作对比</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">document</span><br><span class="line">  dom 节点     元素节点   属性节点    文本节点</span><br><span class="line">  $(&apos;.box&apos;) 元素节点</span><br><span class="line">  $(&apos;.box&apos;).attr(&apos;class&apos;)   属性节点</span><br><span class="line">  $(&apos;.box&apos;).text()   文本节点</span><br><span class="line">  获取元素节点  原生获取 dom 元素  -----&gt; 标签</span><br><span class="line">  var box = $(&apos;.box&apos;)  获取 jq 的 dom 元素 该元素可以使用 jq 的很多方法</span><br><span class="line">  获取原生 dom 只能使用原生 的一些方法</span><br><span class="line">  document.getElementsByClassName(&apos;box&apos;)   获取 class 名为 box 的所有元素组成的类数组，想要获取里面的 dom 使用 [下标]</span><br><span class="line">  document.getElementById(id) 根据 id 名获取 dom 结构 只能获取一个</span><br><span class="line">  document.getElementsByTagName(标签名) 根据 标签名获取 dom 结构 能获取多个 存储在类数组内，想要获取里面的 dom 使用 [下标]</span><br><span class="line">  var box = document.getElementsByClassName(&apos;box&apos;)[0]</span><br><span class="line">  var box = document.getElementsByTagName(&apos;div&apos;)[0]</span><br><span class="line">  var box1 = document.getElementById(&apos;box1&apos;)</span><br><span class="line">  var jqBox = $(&apos;.box&apos;)</span><br><span class="line">  console.log(jqBox)</span><br><span class="line">  console.log(box)</span><br><span class="line">  console.log(box1)</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">document.querySelector(&apos;css选择器&apos;)  根据选择器获取一个 dom 结构</span><br><span class="line">document.querySelectorAll(&apos;css选择器&apos;) 根据选择器获取多个 dom 结构放在类数组内，想要获取里面的 dom 使用 [下标]</span><br><span class="line">var box = document.querySelectorAll(&apos;.box&apos;)[0]</span><br><span class="line">console.log(box)</span><br><span class="line">原生的获取 dom 结构需要注意的: 某些方法能获取多个 dom ，肯定把 dom 放在类数组内，想要获取里面的使用 [下标]</span><br><span class="line"></span><br><span class="line">事件绑定</span><br><span class="line">原生的事件绑定必须绑定在真正的 dom 节点上。注意有些时候获取的内容是类数组，真正的节点在里面</span><br><span class="line">jq   $(&apos;.box&apos;).click(function()&#123;事件做的事&#125;)</span><br><span class="line">原生</span><br><span class="line">1.在 script 标签内绑定</span><br><span class="line">document.getElementsById is not a function</span><br><span class="line">getElementsById 不是前面对象的一个方法</span><br><span class="line"></span><br><span class="line">document.getElementsByTagName(&apos;button&apos;).onclick = function() &#123;</span><br><span class="line">  // Cannot set property &apos;onclick&apos; of null</span><br><span class="line">  // 不能设置 null 的 onclick 属性</span><br><span class="line">  // onclick 前面的对象是 null</span><br><span class="line">  console.log(&apos;1111&apos;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">2.在元素本身的标签内绑定事件</span><br><span class="line">需要在 js 内定义一个事件函数 内部写上事件要做的事</span><br><span class="line">在标签内填写一个 onclick 属性 ,属性值为刚才定义的函数调用 那么就绑定了 click 事件，点击的时候执行函数里面的内容</span><br><span class="line"></span><br><span class="line">function show() &#123;</span><br><span class="line">  console.log(&apos;1111&apos;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">document.getElementsByTagName(&apos;button&apos;)[0].onclick = function() &#123;</span><br><span class="line">$(&apos;.box&apos;).css(&apos;background-color&apos;, &apos;red&apos;) //css 方法修改的是行内样式</span><br><span class="line">改变样式</span><br><span class="line">1. 获取原生 dom 的行内样式集合(样式对象)  原生dom.style</span><br><span class="line">2. 直接对行内样式对象下的某个属性赋值相当于修改了行内样式</span><br><span class="line">var boxStyle = document.querySelector(&apos;.box&apos;).style</span><br><span class="line">boxStyle.height = &apos;300px&apos;</span><br><span class="line">boxStyle.backgroundColor = &apos;red&apos;</span><br><span class="line">boxStyle.width = &apos;400px&apos;</span><br><span class="line">console.log(boxStyle)</span><br><span class="line"></span><br><span class="line">修改或获取属性的属性值</span><br><span class="line"></span><br><span class="line">获取</span><br><span class="line"> jq  $(&apos;.box&apos;).attr(&apos;title&apos;)</span><br><span class="line"> 原生  原生dom.getAttribute(&apos;属性名&apos;)</span><br><span class="line">var title = document.querySelector(&apos;.box&apos;).getAttribute(&apos;title&apos;)</span><br><span class="line">console.log(title)</span><br><span class="line">修改</span><br><span class="line"> jq  $(&apos;.box&apos;).attr(&apos;title&apos;,&apos;要改的值&apos;)</span><br><span class="line">原生 原生dom.setAttribute(&apos;属性名&apos;,&apos;要改的值&apos;)</span><br><span class="line">document.querySelector(&apos;.box&apos;).setAttribute(&apos;title&apos;, &apos;123456&apos;)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>原生常用属性方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">常用属性</span><br><span class="line">1 element.id 设置或返回元素的 id。</span><br><span class="line">2 element.innerHTML 设置或者返回元素的内容，可包含节点中的子标签以及内容</span><br><span class="line">3 element.innerText 设置或者返回元素的内容，不包含节点中的子标签以及内容</span><br><span class="line">4 element.className 设置或者 返回元素的类名</span><br><span class="line">5 element.nodeName 返回该节点的大写字母标签名</span><br><span class="line">6 element.nodeType 返回该结点的节点类型，1表示元素节点 2表示属性节点……</span><br><span class="line">7 element.nodeValue 返回该节点的value值，元素节点的该值为null</span><br><span class="line">8 element.childNodes 返回元素的子节点的nodeslist对象，nodelist类似于数组 有length属性，可以使用方括号 [index] 访问指定索引的值(也可以使用item(index)方法)。但nodelist并不是数组。</span><br><span class="line">9 element.firstChild/element.lastChild 返回元素的第一个/最后一个子节点(包含注释节点和文本节点)</span><br><span class="line">10 element.parentNode 返回该结点的父节点</span><br><span class="line">11 element.previousSibling 返回与当前节点同级的上一个节点(包含注释节点和文本节点)</span><br><span class="line">12 element.nextSibling 返回与当前节点同级的下一个节点(包含注释节点和文本节点)</span><br><span class="line">13 element.childElementCount : 返回子元素(不包括文本节点以及注释节点)的个数</span><br><span class="line">14 element.firstElementChild /lastElementChild 返回第一个/最后一个子元素(不包括文本节点以及注释节点)</span><br><span class="line">15 element.previousElementSibling/nextElementSibling 返回前一个/后一个兄弟元素(不包括文本节点以及注释节点)</span><br><span class="line">16 element.clientHeight/clientWidth 返回内容的可视高度/宽度（不包括边框，</span><br><span class="line">边距或滚动条）</span><br><span class="line">17 element.offsetHeight/offsetWidth /offsetLeft/offsetTop 返回元素的高度/宽度/相对于父元素的左偏移/上偏移(包括边框和填充,不包括边距)</span><br><span class="line">18 element.scrollHeight/scrollWidth/scrollLeft/scrollTop返回整个元素的高度（包括带滚动条的隐蔽的地方）/宽度/返回当前视图中的实际元素的左边缘和左边缘之间的距离/上边缘的距离</span><br><span class="line">19 element.style 设置或返回元素的行内样式属性。</span><br><span class="line">element.style.backgroundColor 注意，与CSS不同，style的属性要去掉横杠，第二个单词首字母要大写</span><br><span class="line">20 element.tagName 返回元素的标签名(大写)</span><br><span class="line">常用方法</span><br><span class="line">1 element.appendChild(nodeName) 向元素添加新的子节点，作为最后一个子节点，并返回该子节点。如需向 HTML DOM 添加新元素，您首先必须创建该元素 ，然后把它追加到已有的元素上。</span><br><span class="line">2 element.getAttribute(para) 返回元素节点的指定属性值。</span><br><span class="line">3 element.getAttributeNode(para) 返回指定的属性节点。</span><br><span class="line">4 element.getElementsByTagName(para) 返回拥有指定标签名的所有子元素的集</span><br><span class="line">合。</span><br><span class="line">5 element.hasAttribute(para) 如果元素拥有指定属性，则返回true，否则返回 false。</span><br><span class="line">6 element.insertBefore(insertNode,appointedNode) 在指定的已有的子节点之前插入新节点。</span><br><span class="line">js演示代码：</span><br><span class="line">var a=document.getElementById(&apos;first_form&apos;);</span><br><span class="line">var inputList=document.getElementsByTagName(&apos;input&apos;);</span><br><span class="line">var newNode=document.createElement(&apos;input&apos;);</span><br><span class="line">var newNode2=document.createTextNode(&apos;天马流星拳&apos;);</span><br><span class="line">var br=document.createElement(&apos;br&apos;);</span><br><span class="line">newNode.type=&apos;radio&apos;;</span><br><span class="line">newNode.name=&apos;gongfu&apos;;</span><br><span class="line">newNode.value=&apos;tmlxq&apos;;</span><br><span class="line">a.insertBefore(newNode,inputList[2]);</span><br><span class="line">a.insertBefore(newNode2,inputList[3]);</span><br><span class="line">a.insertBefore(br,inputList[3]);</span><br><span class="line">7 element.removeAttribute() 从元素中移除指定属性。</span><br><span class="line">8 element.removeChild() 从元素中移除子节点。</span><br><span class="line">9 element.replaceChild(newNode,replaceNode) 把指定节点替换为新节点。</span><br><span class="line">10 element.setAttribute(attrName,attrValue) 把指定属性设置或更改为指定值。</span><br><span class="line">11 element.setAttributeNode() 修改指定属性节点</span><br><span class="line">12 nodelist.item(0) 返回 NodeList 中位于指定下标的节点。</span><br><span class="line">  nodelist[0]</span><br></pre></td></tr></table></figure></p><hr>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>webpack搭建vue开发环境</title>
      <link href="/2019/06/04/webpack%E6%90%AD%E5%BB%BAvue%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
      <url>/2019/06/04/webpack%E6%90%AD%E5%BB%BAvue%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<p>vue-cli生成的项目，帮我们配置好了哪些功能？</p><p>ES6代码转换成ES5代码<br>scss/sass/less/stylus转css<br>.vue文件转换成js文件<br>使用 jpg、png，font等资源文件<br>自动添加css各浏览器产商的前缀<br>代码热更新<br>资源预加载<br>每次构建代码清除之前生成的代码<br>定义环境变量<br>区分开发环境打包跟生产环境打包<br>…</p><a id="more"></a><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">## 搭建 webpack 基本环境</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">简单的说，webpack是一个模块打包机，可以分析你的项目依赖的模块以及一些浏览器不能直接运行的语言jsx、vue等转换成 js、css文件等，供浏览器使用。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 初始化项目</span><br><span class="line">在命令行中执行 npm init 然后一路回车就行了，主要是生成一些项目基本信息。最后会生成一个 package.json 文件</span><br></pre></td></tr></table></figure><p>npm init<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 安装webpack</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 写点小代码测试一下webpack是否安装成功了</span><br><span class="line">新建一个src文件夹，然后再建一个main.js文件</span><br></pre></td></tr></table></figure></p><p>// src/main.js<br>console.log(‘hello webpack’)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">然后在 package.json 下面加一个脚本命令</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">然后运行该命令</span><br></pre></td></tr></table></figure></p><p>npm run serve</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">如果在 dist 目录下生成了一个main.js文件，则表示webpack工作正常</span><br><span class="line"></span><br><span class="line">## 开始配置功能</span><br><span class="line">新建一个 build 文件夹，用来存放 webpack配置相关的文件</span><br><span class="line">在build文件夹下新建一个webpack.config.js，配置webpack的基本配置</span><br><span class="line">修改 webpack.config.js配置</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">修改package.json 文件，将之前添加的 serve 修改为</span><br><span class="line">&quot;serve&quot;: &quot;webpack ./src/main.js --config ./build/webpack.config.js&quot;</span><br><span class="line">### 配置 ES6/7/8 转 ES5代码</span><br><span class="line">安装相关依赖</span><br><span class="line">npm install babel-loader @babel/core @babel/preset-env</span><br><span class="line">修改webpack.config.js配置</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">在项目根目录添加一个 babel.config.js 文件</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">然后执行 npm run serve 命令，可以看到 ES6代码被转成了ES5代码了</span><br><span class="line">#### ES6/7/8 Api 转es5</span><br><span class="line">babel-loader只会将 ES6/7/8语法转换为ES5语法，但是对新api并不会转换。</span><br><span class="line"></span><br><span class="line">我们可以通过 babel-polyfill 对一些不支持新语法的客户端提供新语法的实现</span><br><span class="line"></span><br><span class="line">安装</span><br><span class="line">npm install @babel/polyfill</span><br><span class="line">修改webpack.config.js配置</span><br><span class="line">在 entry 中添加 @babel-polyfill</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#### 按需引入polyfill</span><br><span class="line">2.1.2 和 2.1.1 只需要配置一个就行</span><br><span class="line"></span><br><span class="line">修改时间 2019-05-05、 来自评论区 兮漫天 的提醒</span><br><span class="line"></span><br><span class="line">安装相关依赖</span><br><span class="line">npm install core-js@2 @babel/runtime-corejs2 -S</span><br><span class="line">修改 babel-config.js</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">配置了按需引入 polyfill 后，用到es6以上的函数，babel会自动导入相关的polyfill，这样能大大减少 打包编译后的体积</span><br><span class="line"></span><br><span class="line">### 配置 scss 转 css</span><br><span class="line">在没配置 css 相关的 loader 时，引入scss、css相关文件打包的话，会报错</span><br><span class="line"></span><br><span class="line">安装相关依赖</span><br><span class="line">npm install sass-loader dart-sass css-loader style-loader -D</span><br><span class="line">sass-loader, dart-sass主要是将 scss/sass 语法转为css</span><br><span class="line"></span><br><span class="line">css-loader主要是解析 css 文件</span><br><span class="line"></span><br><span class="line">style-loader 主要是将 css 解析到 html页面 的 style 上</span><br><span class="line"></span><br><span class="line">修改webpack.config.js配置</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 配置 postcss 实现自动添加css3前缀</span><br><span class="line">安装相关依赖</span><br><span class="line">npm install postcss-loader autoprefixer -D</span><br><span class="line">修改webpack.config.js配置</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">在项目根目录下新建一个 postcss.config.js</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 使用 html-webpack-plugin来创建html页面</span><br><span class="line">使用 html-webpack-plugin来创建html页面，并自动引入打包生成的js文件</span><br><span class="line"></span><br><span class="line">安装依赖</span><br><span class="line">npm install html-webpack-plugin -D</span><br><span class="line">新建一个 public/index.html 页面</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">  &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</span><br><span class="line">  &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;div id=&quot;app&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line">修改 webpack-config.js 配置</span><br><span class="line"></span><br><span class="line">### 配置 devServer 热更新功能</span><br><span class="line">通过代码的热更新功能，我们可以实现不刷新页面的情况下，更新我们的页面</span><br><span class="line"></span><br><span class="line">安装依赖</span><br><span class="line">npm install webpack-dev-server -D</span><br><span class="line">修改webpack.config.js配置</span><br><span class="line">通过配置 devServer 和 HotModuleReplacementPlugin 插件来实现热更新</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 配置 webpack 打包 图片、媒体、字体等文件</span><br><span class="line">安装依赖</span><br><span class="line">npm install file-loader url-loader -D</span><br><span class="line">file-loader 解析文件url，并将文件复制到输出的目录中</span><br><span class="line"></span><br><span class="line">url-loader 功能与 file-loader 类似，如果文件小于限制的大小。则会返回 base64 编码，否则使用 file-loader 将文件复制到输出的目录中</span><br><span class="line"></span><br><span class="line">修改 webpack-config.js 配置</span><br><span class="line">添加 rules 配置，分别对 图片，媒体，字体文件进行配置</span><br><span class="line">// build/webpack.config.js</span><br><span class="line">const path = require(&apos;path&apos;)</span><br><span class="line">const HtmlWebpackPlugin = require(&apos;html-webpack-plugin&apos;)</span><br><span class="line">const webpack = require(&apos;webpack&apos;)</span><br><span class="line">module.exports = &#123;</span><br><span class="line">  // 省略其它配置 ...</span><br><span class="line">  module: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      // ...</span><br><span class="line">      &#123;</span><br><span class="line">        test: /\.(jpe?g|png|gif)$/i,</span><br><span class="line">        use: [</span><br><span class="line">          &#123;</span><br><span class="line">            loader: &apos;url-loader&apos;,</span><br><span class="line">            options: &#123;</span><br><span class="line">              limit: 4096,</span><br><span class="line">              fallback: &#123;</span><br><span class="line">                loader: &apos;file-loader&apos;,</span><br><span class="line">                options: &#123;</span><br><span class="line">                    name: &apos;img/[name].[hash:8].[ext]&apos;</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: /\.(mp4|webm|ogg|mp3|wav|flac|aac)(\?.*)?$/,</span><br><span class="line">        use: [</span><br><span class="line">          &#123;</span><br><span class="line">            loader: &apos;url-loader&apos;,</span><br><span class="line">            options: &#123;</span><br><span class="line">              limit: 4096,</span><br><span class="line">              fallback: &#123;</span><br><span class="line">                loader: &apos;file-loader&apos;,</span><br><span class="line">                options: &#123;</span><br><span class="line">                  name: &apos;media/[name].[hash:8].[ext]&apos;</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: /\.(woff2?|eot|ttf|otf)(\?.*)?$/i,</span><br><span class="line">        use: [</span><br><span class="line">          &#123;</span><br><span class="line">            loader: &apos;url-loader&apos;,</span><br><span class="line">            options: &#123;</span><br><span class="line">              limit: 4096,</span><br><span class="line">              fallback: &#123;</span><br><span class="line">                loader: &apos;file-loader&apos;,</span><br><span class="line">                options: &#123;</span><br><span class="line">                  name: &apos;fonts/[name].[hash:8].[ext]&apos;</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  plugins: [</span><br><span class="line">    // ...</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">## 让 webpack 识别 .vue 文件</span><br><span class="line">安装需要的依赖文件</span><br><span class="line">npm install vue-loader vue-template-compiler cache-loader thread-loader -D</span><br><span class="line">npm install vue -S</span><br><span class="line">vue-loader 用于解析.vue文件</span><br><span class="line"></span><br><span class="line">vue-template-compiler 用于编译模板</span><br><span class="line"></span><br><span class="line">cache-loader 用于缓存loader编译的结果</span><br><span class="line"></span><br><span class="line">thread-loader 使用 worker 池来运行loader，每个 worker 都是一个 node.js 进程。</span><br><span class="line"></span><br><span class="line">修改 webpack.config.js配置</span><br><span class="line">// build/webpack.config.js</span><br><span class="line">const path = require(&apos;path&apos;)</span><br><span class="line">const webpack = require(&apos;webpack&apos;)</span><br><span class="line">const HtmlWebpackPlugin = require(&apos;html-webpack-plugin&apos;)</span><br><span class="line">const VueLoaderPlugin = require(&apos;vue-loader/lib/plugin&apos;)</span><br><span class="line">module.exports = &#123;</span><br><span class="line">  // 指定打包模式</span><br><span class="line">  mode: &apos;development&apos;,</span><br><span class="line">  entry: &#123;</span><br><span class="line">    // ...</span><br><span class="line">  &#125;,</span><br><span class="line">  output: &#123;</span><br><span class="line">    // ...</span><br><span class="line">  &#125;,</span><br><span class="line">  devServer: &#123;</span><br><span class="line">    // ...</span><br><span class="line">  &#125;,</span><br><span class="line">  resolve: &#123;</span><br><span class="line">    alias: &#123;</span><br><span class="line">      vue$: &apos;vue/dist/vue.runtime.esm.js&apos;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  module: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      &#123;</span><br><span class="line">        test: /\.vue$/,</span><br><span class="line">        use: [</span><br><span class="line">          &#123;</span><br><span class="line">            loader: &apos;cache-loader&apos;</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            loader: &apos;thread-loader&apos;</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            loader: &apos;vue-loader&apos;,</span><br><span class="line">            options: &#123;</span><br><span class="line">              compilerOptions: &#123;</span><br><span class="line">                preserveWhitespace: false</span><br><span class="line">              &#125;,</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: /\.jsx?$/,</span><br><span class="line">        use: [</span><br><span class="line">          &#123;</span><br><span class="line">            loader: &apos;cache-loader&apos;</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            loader: &apos;thread-loader&apos;</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            loader: &apos;babel-loader&apos;</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      // ...</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  plugins: [</span><br><span class="line">    // ...</span><br><span class="line">    new VueLoaderPlugin()</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">测试一下</span><br><span class="line">在 src 新建一个 App.vue</span><br><span class="line">// src/App.vue</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;App&quot;&gt;</span><br><span class="line">    Hello World</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &apos;App&apos;,</span><br><span class="line"></span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;&#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class="line">.App &#123;</span><br><span class="line">  color: skyblue;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">修改 main.js</span><br><span class="line">import Vue from &apos;vue&apos;</span><br><span class="line">import App from &apos;./App.vue&apos;</span><br><span class="line"></span><br><span class="line">new Vue(&#123;</span><br><span class="line">  render: h =&gt; h(App)</span><br><span class="line">&#125;).$mount(&apos;#app&apos;)</span><br><span class="line">运行一下</span><br><span class="line">npm run serve</span><br><span class="line"></span><br><span class="line">## 定义环境变量</span><br><span class="line">通过 webpack提供的DefinePlugin插件，可以很方便的定义环境变量</span><br><span class="line"></span><br><span class="line">plugins: [</span><br><span class="line">    new webpack.DefinePlugin(&#123;</span><br><span class="line">      &apos;process.env&apos;: &#123;</span><br><span class="line">        VUE_APP_BASE_URL: JSON.stringify(&apos;http://localhost:3000&apos;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;),</span><br><span class="line">]</span><br><span class="line">## 区分生产环境和开发环境</span><br><span class="line">新建两个文件</span><br><span class="line"></span><br><span class="line">webpack.dev.js 开发环境使用</span><br><span class="line"></span><br><span class="line">webpack.prod.js 生产环境使用</span><br><span class="line"></span><br><span class="line">webpack.config.js 公用配置</span><br><span class="line"></span><br><span class="line">开发环境与生产环境的不同</span><br><span class="line"></span><br><span class="line">### 开发环境</span><br><span class="line">不需要压缩代码</span><br><span class="line">需要热更新</span><br><span class="line">css不需要提取到css文件</span><br><span class="line">sourceMap</span><br><span class="line">…</span><br><span class="line">### 生产环境</span><br><span class="line">压缩代码</span><br><span class="line">不需要热更新</span><br><span class="line">提取css，压缩css文件</span><br><span class="line">sourceMap</span><br><span class="line">构建前清除上一次构建的内容</span><br><span class="line">…</span><br><span class="line">安装所需依赖</span><br><span class="line">npm i @intervolga/optimize-cssnano-plugin mini-css-extract-plugin clean-webpack-plugin webpack-merge copy-webpack-plugin -D</span><br><span class="line">@intervolga/optimize-cssnano-plugin 用于压缩css代码</span><br><span class="line">mini-css-extract-plugin 用于提取css到文件中</span><br><span class="line">clean-webpack-plugin 用于删除上次构建的文件</span><br><span class="line">webpack-merge 合并 webpack配置</span><br><span class="line">copy-webpack-plugin 用户拷贝静态资源</span><br><span class="line">#### 开发环境配置</span><br><span class="line">build/webpack.dev.js</span><br><span class="line">// build/webpack.dev.js</span><br><span class="line">const merge = require(&apos;webpack-merge&apos;)</span><br><span class="line">const webpackConfig = require(&apos;./webpack.config&apos;)</span><br><span class="line">const webpack = require(&apos;webpack&apos;)</span><br><span class="line">module.exports = merge(webpackConfig, &#123;</span><br><span class="line">  mode: &apos;development&apos;,</span><br><span class="line">  devtool: &apos;cheap-module-eval-source-map&apos;,</span><br><span class="line">  module: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      &#123;</span><br><span class="line">        test: /\.(scss|sass)$/,</span><br><span class="line">        use: [</span><br><span class="line">          &#123;</span><br><span class="line">            loader: &apos;style-loader&apos;</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            loader: &apos;css-loader&apos;,</span><br><span class="line">            options: &#123;</span><br><span class="line">              importLoaders: 2</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            loader: &apos;sass-loader&apos;,</span><br><span class="line">            options: &#123;</span><br><span class="line">              implementation: require(&apos;dart-sass&apos;)</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            loader: &apos;postcss-loader&apos;</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  plugins: [</span><br><span class="line">    new webpack.DefinePlugin(&#123;</span><br><span class="line">      &apos;process.env&apos;: &#123;</span><br><span class="line">        NODE_ENV: JSON.stringify(&apos;development&apos;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;),</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br><span class="line">webpack.config.js</span><br><span class="line">// build/webpack.config.js</span><br><span class="line">const path = require(&apos;path&apos;)</span><br><span class="line">const webpack = require(&apos;webpack&apos;)</span><br><span class="line">const HtmlWebpackPlugin = require(&apos;html-webpack-plugin&apos;)</span><br><span class="line">const VueLoaderPlugin = require(&apos;vue-loader/lib/plugin&apos;)</span><br><span class="line">module.exports = &#123;</span><br><span class="line">  entry: &#123;</span><br><span class="line">    // 配置入口文件</span><br><span class="line">    main: path.resolve(__dirname, &apos;../src/main.js&apos;)</span><br><span class="line">  &#125;,</span><br><span class="line">  output: &#123;</span><br><span class="line">    // 配置打包文件输出的目录</span><br><span class="line">    path: path.resolve(__dirname, &apos;../dist&apos;),</span><br><span class="line">    // 生成的 js 文件名称</span><br><span class="line">    filename: &apos;js/[name].[hash:8].js&apos;,</span><br><span class="line">    // 生成的 chunk 名称</span><br><span class="line">    chunkFilename: &apos;js/[name].[hash:8].js&apos;,</span><br><span class="line">    // 资源引用的路径</span><br><span class="line">    publicPath: &apos;/&apos;</span><br><span class="line">  &#125;,</span><br><span class="line">  devServer: &#123;</span><br><span class="line">    hot: true,</span><br><span class="line">    port: 3000,</span><br><span class="line">    contentBase: &apos;./dist&apos;</span><br><span class="line">  &#125;,</span><br><span class="line">  resolve: &#123;</span><br><span class="line">    alias: &#123;</span><br><span class="line">      vue$: &apos;vue/dist/vue.runtime.esm.js&apos;</span><br><span class="line">    &#125;,</span><br><span class="line">    extensions: [</span><br><span class="line">      &apos;.js&apos;,</span><br><span class="line">      &apos;.vue&apos;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  module: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      &#123;</span><br><span class="line">        test: /\.vue$/,</span><br><span class="line">        use: [</span><br><span class="line">          &#123;</span><br><span class="line">            loader: &apos;cache-loader&apos;</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            loader: &apos;vue-loader&apos;,</span><br><span class="line">            options: &#123;</span><br><span class="line">              compilerOptions: &#123;</span><br><span class="line">                preserveWhitespace: false</span><br><span class="line">              &#125;,</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: /\.jsx?$/,</span><br><span class="line">        loader: &apos;babel-loader&apos;</span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line">      &#123;</span><br><span class="line">        test: /\.(jpe?g|png|gif)$/,</span><br><span class="line">        use: [</span><br><span class="line">          &#123;</span><br><span class="line">            loader: &apos;url-loader&apos;,</span><br><span class="line">            options: &#123;</span><br><span class="line">              limit: 4096,</span><br><span class="line">              fallback: &#123;</span><br><span class="line">                loader: &apos;file-loader&apos;,</span><br><span class="line">                options: &#123;</span><br><span class="line">                  name: &apos;img/[name].[hash:8].[ext]&apos;</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: /\.(mp4|webm|ogg|mp3|wav|flac|aac)(\?.*)?$/,</span><br><span class="line">        use: [</span><br><span class="line">          &#123;</span><br><span class="line">            loader: &apos;url-loader&apos;,</span><br><span class="line">            options: &#123;</span><br><span class="line">              limit: 4096,</span><br><span class="line">              fallback: &#123;</span><br><span class="line">                loader: &apos;file-loader&apos;,</span><br><span class="line">                options: &#123;</span><br><span class="line">                  name: &apos;media/[name].[hash:8].[ext]&apos;</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: /\.(woff2?|eot|ttf|otf)(\?.*)?$/i,</span><br><span class="line">        use: [</span><br><span class="line">          &#123;</span><br><span class="line">            loader: &apos;url-loader&apos;,</span><br><span class="line">            options: &#123;</span><br><span class="line">              limit: 4096,</span><br><span class="line">              fallback: &#123;</span><br><span class="line">                loader: &apos;file-loader&apos;,</span><br><span class="line">                options: &#123;</span><br><span class="line">                  name: &apos;fonts/[name].[hash:8].[ext]&apos;</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  plugins: [</span><br><span class="line">    new VueLoaderPlugin(),</span><br><span class="line"></span><br><span class="line">    new HtmlWebpackPlugin(&#123;</span><br><span class="line">      template: path.resolve(__dirname, &apos;../public/index.html&apos;)</span><br><span class="line">    &#125;),</span><br><span class="line">    new webpack.NamedModulesPlugin(),</span><br><span class="line">    new webpack.HotModuleReplacementPlugin(),</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">### 生产环境配置</span><br><span class="line">const path = require(&apos;path&apos;)</span><br><span class="line">const merge = require(&apos;webpack-merge&apos;)</span><br><span class="line">const webpack = require(&apos;webpack&apos;)</span><br><span class="line">const webpackConfig = require(&apos;./webpack.config&apos;)</span><br><span class="line">const MiniCssExtractPlugin = require(&apos;mini-css-extract-plugin&apos;)</span><br><span class="line">const OptimizeCssnanoPlugin = require(&apos;@intervolga/optimize-cssnano-plugin&apos;);</span><br><span class="line">const CleanWebpackPlugin = require(&apos;clean-webpack-plugin&apos;)</span><br><span class="line">const CopyWebpackPlugin = require(&apos;copy-webpack-plugin&apos;)</span><br><span class="line">module.exports = merge(webpackConfig, &#123;</span><br><span class="line">  mode: &apos;production&apos;,</span><br><span class="line">  devtool: &apos;#source-map&apos;,</span><br><span class="line">  optimization: &#123;</span><br><span class="line">    splitChunks: &#123;</span><br><span class="line">      cacheGroups: &#123;</span><br><span class="line">        vendors: &#123;</span><br><span class="line">          name: &apos;chunk-vendors&apos;,</span><br><span class="line">          test: /[\\\/]node_modules[\\\/]/,</span><br><span class="line">          priority: -10,</span><br><span class="line">          chunks: &apos;initial&apos;</span><br><span class="line">        &#125;,</span><br><span class="line">        common: &#123;</span><br><span class="line">          name: &apos;chunk-common&apos;,</span><br><span class="line">          minChunks: 2,</span><br><span class="line">          priority: -20,</span><br><span class="line">          chunks: &apos;initial&apos;,</span><br><span class="line">          reuseExistingChunk: true</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  module: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      &#123;</span><br><span class="line">        test: /\.(scss|sass)$/,</span><br><span class="line">        use: [</span><br><span class="line">          &#123;</span><br><span class="line">            loader: MiniCssExtractPlugin.loader</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            loader: &apos;css-loader&apos;,</span><br><span class="line">            options: &#123;</span><br><span class="line">              importLoaders: 2</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            loader: &apos;sass-loader&apos;,</span><br><span class="line">            options: &#123;</span><br><span class="line">              implementation: require(&apos;dart-sass&apos;)</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            loader: &apos;postcss-loader&apos;</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  plugins: [</span><br><span class="line">    new webpack.DefinePlugin(&#123;</span><br><span class="line">      &apos;process.env&apos;: &#123;</span><br><span class="line">        NODE_ENV: &apos;production&apos;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;),</span><br><span class="line">    new MiniCssExtractPlugin(&#123;</span><br><span class="line">      filename: &apos;css/[name].[contenthash:8].css&apos;,</span><br><span class="line">      chunkFilename: &apos;css/[name].[contenthash:8].css&apos;</span><br><span class="line">    &#125;),</span><br><span class="line">    new OptimizeCssnanoPlugin(&#123;</span><br><span class="line">      sourceMap: true,</span><br><span class="line">      cssnanoOptions: &#123;</span><br><span class="line">        preset: [</span><br><span class="line">          &apos;default&apos;,</span><br><span class="line">          &#123;</span><br><span class="line">            mergeLonghand: false,</span><br><span class="line">            cssDeclarationSorter: false</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;),</span><br><span class="line">    new CopyWebpackPlugin([</span><br><span class="line">      &#123;</span><br><span class="line">        from: path.resolve(__dirname, &apos;../public&apos;),</span><br><span class="line">        to: path.resolve(__dirname, &apos;../dist&apos;)</span><br><span class="line">      &#125;</span><br><span class="line">    ]),</span><br><span class="line">    new CleanWebpackPlugin()</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">### 修改package.json</span><br><span class="line">&quot;scripts&quot;: &#123;</span><br><span class="line">    &quot;serve&quot;: &quot;webpack-dev-server --config ./build/webpack.dev.js&quot;,</span><br><span class="line">    &quot;build&quot;: &quot;webpack --config ./build/webpack.prod.js&quot;</span><br><span class="line">&#125;,</span><br><span class="line">## 打包分析</span><br><span class="line">有的时候，我们需要看一下webpack打包完成后，到底打包了什么东西，</span><br><span class="line"></span><br><span class="line">这时候就需要用到这个模块分析工具了 webpack-bundle-analyzer</span><br><span class="line"></span><br><span class="line">安装依赖</span><br><span class="line">npm install --save-dev webpack-bundle-analyzer</span><br><span class="line">修改webpack-prod.js配置，在 plugins属性中新增一个插件</span><br><span class="line">在开发环境中，我们是没必要进行模块打包分析的，所以我们将插件配置在了生产环境的配置项中</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">运行打包命令</span><br><span class="line">npm run build</span><br><span class="line">执行成功后会自动打开这个页面</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 集成 VueRouter,Vuex</span><br><span class="line">首先是安装相关依赖</span><br><span class="line">npm install vue-router vuex --save</span><br><span class="line">### 集成 Vue-Router</span><br><span class="line">新增视图组件</span><br><span class="line">在 src 目录下新增两个视图组件 src/views/Home.vue 和 src/views/About.vue</span><br><span class="line">// src/views/Home.vue</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;Home&quot;&gt;</span><br><span class="line">    &lt;h2&gt;Home&lt;/h2&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &apos;Home&apos;,</span><br><span class="line"></span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;&#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">About.vue 内容跟 Home.vue 差不多，将里面的 Home 换成 About 就OK了</span><br><span class="line"></span><br><span class="line">新增路由配置文件</span><br><span class="line">在 src 目录下新增一个 router/index.js 文件</span><br><span class="line"></span><br><span class="line">// src/router/index.js</span><br><span class="line">import Vue from &apos;vue&apos;</span><br><span class="line">import VueRouter from &quot;vue-router&quot;;</span><br><span class="line">import Home from &apos;../views/Home&apos;;</span><br><span class="line">import About from &apos;../views/About&apos;;</span><br><span class="line">Vue.use(VueRouter)</span><br><span class="line">export default new VueRouter(&#123;</span><br><span class="line">  mode: &apos;hash&apos;,</span><br><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/Home&apos;,</span><br><span class="line">      component: Home</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/About&apos;,</span><br><span class="line">      component: About</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;*&apos;,</span><br><span class="line">      redirect: &apos;/Home&apos;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br><span class="line">修改 main.js 文件</span><br><span class="line">// main.js</span><br><span class="line">import Vue from &apos;vue&apos;</span><br><span class="line">import App from &apos;./App.vue&apos;</span><br><span class="line">import router from &apos;./router&apos;</span><br><span class="line"></span><br><span class="line">new Vue(&#123;</span><br><span class="line">  router,</span><br><span class="line">  render: h =&gt; h(App)</span><br><span class="line">&#125;).$mount(&apos;#app&apos;)</span><br><span class="line">修改 App.vue 组件</span><br><span class="line">// App.vue</span><br><span class="line">// 在 template 中添加</span><br><span class="line">// src/App.vue</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;App&quot;&gt;</span><br><span class="line">    Hello World</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">      // router-link 组件 用来导航到哪个路由</span><br><span class="line">      &lt;router-link to=&quot;/Home&quot;&gt;go Home&lt;/router-link&gt;</span><br><span class="line">      &lt;router-link to=&quot;/About&quot;&gt;go About&lt;/router-link&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      // 用于展示匹配到的路由视图组件</span><br><span class="line">      &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &apos;App&apos;,</span><br><span class="line"></span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;&#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class="line">.App &#123;</span><br><span class="line">  color: skyblue;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">运行 npm run serve 命令，如没配置错误，是可以看到点击不同的路由，会切换到不同的路由视图</span><br><span class="line"></span><br><span class="line">### 配置路由懒加载</span><br><span class="line">在没配置路由懒加载的情况下，我们的路由组件在打包的时候，都会打包到同一个js文件去，当我们的视图组件越来越多的时候，就会导致这个 js 文件越来越大。然后就会导致请求这个文件的时间变长，最终影响用户体验</span><br><span class="line"></span><br><span class="line">安装依赖</span><br><span class="line">npm install @babel/plugin-syntax-dynamic-import --save-dev</span><br><span class="line">修改babel.config.js</span><br><span class="line">module.exports = &#123;</span><br><span class="line">  presets: [</span><br><span class="line">    [</span><br><span class="line">      &quot;@babel/preset-env&quot;,</span><br><span class="line">      &#123;</span><br><span class="line">        useBuiltIns: &quot;usage&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  ],</span><br><span class="line">  plugins: [</span><br><span class="line">     // 添加这个</span><br><span class="line">    &apos;@babel/plugin-syntax-dynamic-import&apos;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">修改 router/index.js 路由配置文件</span><br><span class="line">import Vue from &apos;vue&apos;</span><br><span class="line">import VueRouter from &quot;vue-router&quot;;</span><br><span class="line">Vue.use(VueRouter)</span><br><span class="line">export default new VueRouter(&#123;</span><br><span class="line">  mode: &apos;hash&apos;,</span><br><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/Home&apos;,</span><br><span class="line">      component: () =&gt; import(/* webpackChunkName: &quot;Home&quot; */ &apos;../views/Home.vue&apos;)</span><br><span class="line">      // component: Home</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;/About&apos;,</span><br><span class="line">      component: () =&gt; import(/* webpackChunkName: &quot;About&quot; */ &apos;../views/About.vue&apos;)</span><br><span class="line">      // component: About</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: &apos;*&apos;,</span><br><span class="line">      redirect: &apos;/Home&apos;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br><span class="line">运行命令 npm run build</span><br><span class="line">查看是否生成了 Home...js 文件 和 About...js 文件</span><br><span class="line">### 集成 Vuex</span><br><span class="line">在 src 目录下新建一个 store/index.js 文件</span><br><span class="line">// store/index.js</span><br><span class="line">import Vue from &apos;vue&apos;</span><br><span class="line">import Vuex from &apos;vuex&apos;</span><br><span class="line">Vue.use(Vuex)</span><br><span class="line">const state = &#123;</span><br><span class="line">  counter: 0</span><br><span class="line">&#125;</span><br><span class="line">const actions = &#123;</span><br><span class="line">  add: (&#123;commit&#125;) =&gt; &#123;</span><br><span class="line">    return commit(&apos;add&apos;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">const mutations = &#123;</span><br><span class="line">  add: (state) =&gt; &#123;</span><br><span class="line">    state.counter++</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">const getters = &#123;</span><br><span class="line">  getCounter (state) &#123;</span><br><span class="line">    return state.counter</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">export default new Vuex.Store(&#123;</span><br><span class="line">  state,</span><br><span class="line">  actions,</span><br><span class="line">  mutations,</span><br><span class="line">  getters</span><br><span class="line">&#125;)</span><br><span class="line">修改 main.js 文件 导入 vuex</span><br><span class="line">// main.js</span><br><span class="line">import Vue from &apos;vue&apos;</span><br><span class="line">import App from &apos;./App.vue&apos;</span><br><span class="line">import router from &apos;./router&apos;</span><br><span class="line">import store from &apos;./store&apos;  // ++</span><br><span class="line">new Vue(&#123;</span><br><span class="line">  router,</span><br><span class="line">  store,    // ++</span><br><span class="line">  render: h =&gt; h(App)</span><br><span class="line">&#125;).$mount(&apos;#app&apos;)</span><br><span class="line">修改 App.vue ，查看 vuex 配置效果</span><br><span class="line">// App.vue</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;App&quot;&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;router-link to=&quot;/Home&quot;&gt;go Home&lt;/router-link&gt;</span><br><span class="line">      &lt;router-link to=&quot;/About&quot;&gt;go About&lt;/router-link&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;p&gt;&#123;&#123;getCounter&#125;&#125;&lt;/p&gt;</span><br><span class="line">      &lt;button @click=&quot;add&quot;&gt;add&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; mapActions, mapGetters &#125; from &apos;vuex&apos;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &apos;App&apos;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;&#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  computed: &#123;</span><br><span class="line">    ...mapGetters([&apos;getCounter&apos;])</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    ...mapActions([&apos;add&apos;])</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class="line">.App &#123;</span><br><span class="line">  text-align: center;</span><br><span class="line">  color: skyblue;</span><br><span class="line">  font-size: 28px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">运行命令 npm run serve</span><br><span class="line">当点击按钮的时候，可以看到我们的getCounter一直在增加</span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>异步</title>
      <link href="/2019/06/04/%E5%BC%82%E6%AD%A5/"/>
      <url>/2019/06/04/%E5%BC%82%E6%AD%A5/</url>
      
        <content type="html"><![CDATA[<hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">异步操作 (ajax 请求)</span><br><span class="line">    axios.get(&quot;xxx&quot;)</span><br><span class="line">    axios.get(&quot;xxx&quot;)</span><br><span class="line">    http://jsonplaceholder.typicode.com/posts/1</span><br><span class="line">    http://jsonplaceholder.typicode.com/users/1</span><br><span class="line">    function test() &#123;</span><br><span class="line">      // 再上述两个异步操作执行完毕之后再执行</span><br><span class="line">    &#125;</span><br><span class="line">    axios 执行并发请求   axios.all 方法</span><br><span class="line">    将你的并发请求 写成函数的返回值封装到函数内 例如</span><br><span class="line">    function getPost() &#123;</span><br><span class="line">      return axios.get(&quot;http://jsonplaceholder.typicode.com/posts/1&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">    function getUser() &#123;</span><br><span class="line">      return axios.get(&quot;http://jsonplaceholder.typicode.com/users/1&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">    使用 axios.all([getPost(),getUser()]).then(res =&gt; &#123;请求都结束，res 存储两个结果&#125;)</span><br><span class="line">    axios.all([getPost(), getUser()]).then(</span><br><span class="line">      axios.spread(function(res1, res2) &#123;</span><br><span class="line">        console.log(res1, res2)</span><br><span class="line">      &#125;)</span><br><span class="line">    )</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">promise  generator   async</span><br><span class="line">    很多异步(请求)</span><br><span class="line">    resolve  reject  函数</span><br><span class="line">    resolve 函数当异步成功之后执行</span><br><span class="line">    reject 函数异步操作失败</span><br><span class="line">    const promise = new Promise(function(resolve, reject) &#123;</span><br><span class="line">      // ... some code</span><br><span class="line">      if (xxx) &#123;</span><br><span class="line">        resolve(value)</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        reject(error)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    function timeout(ms) &#123;</span><br><span class="line">      return new Promise((resolve, reject) =&gt; &#123;</span><br><span class="line">        // 将异步操作写到 promise 对象(实例)内</span><br><span class="line">        // 将此实例封装到函数内并返回等待调用</span><br><span class="line">        setTimeout(resolve, ms, &quot;done&quot;)</span><br><span class="line">        // setTimeout 给里面的函数传参</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    promise 对象下的 then 方法 传递的参数就是相当 resolve 函数</span><br><span class="line">    timeout(100).then(value =&gt; &#123;</span><br><span class="line">      console.log(value)</span><br><span class="line">    &#125;)</span><br><span class="line">    回调地狱</span><br><span class="line">    setTimeout(() =&gt; &#123;</span><br><span class="line">      // 异步操作成功之后执行</span><br><span class="line">      // 再次执行一个异步操作</span><br><span class="line">      setTimeout(() =&gt; &#123;</span><br><span class="line">        // 在执行其他的异步 判断</span><br><span class="line">        setTimeout(() =&gt; &#123;&#125;)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;, 1000)</span><br><span class="line">    new Promise((resolve, reject) =&gt; &#123;</span><br><span class="line">      // 将异步操作写到 promise 对象(实例)内</span><br><span class="line">      // 将此实例封装到函数内并返回等待调用</span><br><span class="line">      setTimeout(resolve, ms, &quot;done&quot;)</span><br><span class="line">    &#125;).then(res =&gt; &#123;</span><br><span class="line">      console.log(res)</span><br><span class="line">    &#125;)</span><br><span class="line">    async 异步函数 搭配 await  后写异步操作     await 后得到一个返回值就是请求后的结果</span><br><span class="line">    async function test() &#123;</span><br><span class="line">      const a = await axios.get(&quot;http://jsonplaceholder.typicode.com/users/1&quot;)</span><br><span class="line">      console.log(a.data)</span><br><span class="line">    &#125;</span><br><span class="line">    test()</span><br><span class="line"></span><br><span class="line">    123456789</span><br><span class="line">    &quot;123,456,789&quot;</span><br><span class="line">    9007199254740991</span><br><span class="line">    const num = 9007199254740</span><br><span class="line">    console.log(num)</span><br><span class="line">    let str = String(num)</span><br><span class="line">    let len = Math.ceil(str.length / 3 - 1)</span><br><span class="line">    let arr = str.split(&quot;&quot;)</span><br><span class="line">    for (let i = 1; i &lt;= len; i++) &#123;</span><br><span class="line">      arr.splice(str.length - 3 * i, 0, &quot;,&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">    let newStr = arr.join(&quot;&quot;)</span><br><span class="line">    console.log(newStr)</span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      
        <tags>
            
            <tag> 异步 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue跨域</title>
      <link href="/2019/06/04/%E8%B7%A8%E5%9F%9F/"/>
      <url>/2019/06/04/%E8%B7%A8%E5%9F%9F/</url>
      
        <content type="html"><![CDATA[<hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">根目录新建vue.config.js</span><br><span class="line"></span><br><span class="line">cors 策略 跨域资源共享策略</span><br><span class="line">跨域</span><br><span class="line">http://localhost:8080/</span><br><span class="line">https://wanandroid.com</span><br><span class="line">默认浏览是不允许跨域请求的 ，因为同源策略</span><br><span class="line"></span><br><span class="line">同源策略(Same-Origin Policy)。所谓的 同源 是指域名、协议、端口号 相同。不同的客户端脚本（javascript，ActionScript）在没有授权的情况下，不能读取对方资源。简单来说，浏览器允许包含在页面A的脚本访问第二个页面B的数据资源，这一切是建立在A和B页面是同源的基础上。</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">两种解决方案</span><br><span class="line">1. 后台处理 比如说 cnode中文社区 vue中文社区</span><br><span class="line">2. 前台自己处理 vue中 jquery中 react中</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">在 vue 中 前台处理跨域请求 使用 proxy</span><br><span class="line">proxy 是 webpack 的一个配置 代理配置</span><br><span class="line"></span><br><span class="line">axios.get(&quot;/api/article/listproject/0/json&quot;).then(res =&gt; &#123;</span><br><span class="line">console.log(res.data.data.datas);</span><br><span class="line">this.text = res.data.data.datas;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">module.exports = &#123;</span><br><span class="line">devServer: &#123;</span><br><span class="line">proxy: &#123;</span><br><span class="line">// /api 是发送请求的一个代理</span><br><span class="line">// 比如 我们之前 axios.get(&apos;https://wanandroid.com/article/listproject/0/json&apos;)</span><br><span class="line">// 代理之后请求写成 &apos;/api/article/listproject/0/json&apos;</span><br><span class="line">&quot;/api&quot;: &#123;</span><br><span class="line">//对应自己的接口</span><br><span class="line">target: &quot;https://wanandroid.com/&quot;,</span><br><span class="line">changeOrigin: true,</span><br><span class="line">ws: true,</span><br><span class="line">pathRewrite: &#123;</span><br><span class="line">&quot;^/api&quot;: &quot;&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      
        <tags>
            
            <tag> vue跨域 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序</title>
      <link href="/2019/05/23/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
      <url>/2019/05/23/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="列表渲染"><a href="#列表渲染" class="headerlink" title="列表渲染"></a>列表渲染</h2><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">使用 wx:for-item 可以指定数组当前元素的变量名，</span><br><span class="line"></span><br><span class="line">使用 wx:for-index 可以指定数组当前下标的变量名：</span><br></pre></td></tr></table></figure><hr><a id="more"></a><h2 id="条件渲染"><a href="#条件渲染" class="headerlink" title="条件渲染"></a>条件渲染</h2><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wx:if 内如果元素超过两个必须在外层用block</span><br><span class="line">&lt;block wx:if=&#123;&#123;post.length&#125;&#125;&gt;  </span><br><span class="line">&lt;view wx:for=&quot;&#123;&#123;posts&#125;&#125;&quot;&gt;&lt;/view&gt;</span><br><span class="line">&lt;/block&gt;</span><br><span class="line"></span><br><span class="line">&lt;view wx:else&gt;block是一个空标签不渲染成任何标签&lt;/view&gt;</span><br></pre></td></tr></table></figure><hr><h2 id="表单-数据绑定"><a href="#表单-数据绑定" class="headerlink" title="表单   数据绑定"></a>表单   数据绑定</h2><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=&quot;text&quot; bindinput=&quot;inputVal&quot;    value=&quot;&#123;&#123;val&#125;&#125;&quot;/&gt;</span><br><span class="line">  data:&#123;</span><br><span class="line">    val:&quot;&quot;</span><br><span class="line">  &#125;</span><br><span class="line"> inputVal(event) &#123;</span><br><span class="line">    this.setData(&#123;</span><br><span class="line">      val: event.detail.value</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><hr><h2 id="传递参数"><a href="#传递参数" class="headerlink" title="传递参数"></a>传递参数</h2><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">传递 item.id  使用 data-xx=&quot;&#123;&#123;yy&#125;&#125;&quot;</span><br><span class="line">&lt;button data-id=&quot;&#123;&#123;item.id&#125;&#125;&quot;  bind:tap=&quot;shan&quot;&gt;del&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">在js内使用</span><br><span class="line">  shan(event) &#123;</span><br><span class="line">    const &#123; id &#125; = event.currentTarget.dataset</span><br><span class="line">    this.setData(&#123;</span><br><span class="line">      user: this.data.user.filter(res =&gt; res.id != id)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><hr><h2 id="导航"><a href="#导航" class="headerlink" title="导航"></a>导航</h2><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">导航</span><br><span class="line"> &lt;navigator</span><br><span class="line">    url=&quot;../../redirect/redirect/</span><br><span class="line">    open-type=&quot;switchTab&quot;</span><br><span class="line">    &quot;</span><br><span class="line">  &gt;</span><br><span class="line">    在当前页打开</span><br><span class="line">  &lt;/navigator&gt;</span><br><span class="line"></span><br><span class="line">  因为有tabbar原因navigator的跳转必须加 open-type 属性，属性值写为switchTab</span><br></pre></td></tr></table></figure><hr><h2 id="data"><a href="#data" class="headerlink" title="data"></a>data</h2><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data 修改只能使用setdata</span><br></pre></td></tr></table></figure><hr><h2 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h2><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">  需要备案</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">请求</span><br><span class="line">onLoad: function(options) &#123;</span><br><span class="line">    方法</span><br><span class="line">    method:&quot;GET&quot;,</span><br><span class="line">    传参</span><br><span class="line">    data:&#123;&#125;,</span><br><span class="line">    wx.request(&#123;</span><br><span class="line">      url: &apos;https://cnodejs.org/api/v1/topics?limit=5&apos;,</span><br><span class="line">      success:res=&gt; &#123;</span><br><span class="line">        this.setData(&#123;</span><br><span class="line">          title:res.data.data</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">跳转</span><br><span class="line">&lt;navigator url=&quot;/pages/post/post?id=&#123;&#123;item.id&#125;&#125;&quot;&gt;&#123;&#123;item.title&#125;&#125;&lt;/navigator&gt;</span><br><span class="line"></span><br><span class="line">页面内  有条件跳转</span><br><span class="line">wx.switchTab  跳转到 tabBar 页面，并关闭其他所有非 tabBar 页面</span><br><span class="line">wx.reLaunch   关闭所有页面，打开到应用内的某个页面</span><br><span class="line">wx.navigateTo 保留当前页面，跳转到应用内的某个页面。但是不能跳到 tabbar 页面。使用 wx.navigateBack 可以返回到原页面。小程序中页面栈最多十层。</span><br><span class="line">wx.navigateBack 关闭当前页面，返回上一页面或多级页面。</span><br><span class="line">wx.redirectTo  关闭当前页面，跳转到应用内的某个页面。但是不允许跳转到 tabbar 页面。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">options</span><br><span class="line">onLoad: function (options) &#123;</span><br><span class="line">        console.log(options.id);</span><br><span class="line">    wx.request(&#123;</span><br><span class="line">      url: `https://cnodejs.org/api/v1/topic/$&#123;options.id&#125;`,</span><br><span class="line">      success: res =&gt; &#123;</span><br><span class="line">        console.log(res.data.data);</span><br><span class="line">        this.setData(&#123;</span><br><span class="line">          title: res.data.data</span><br><span class="line">          </span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><hr><h2 id="下拉刷新"><a href="#下拉刷新" class="headerlink" title="下拉刷新"></a>下拉刷新</h2><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">首先 增加 &quot;enablePullDownRefresh&quot;:true 配置</span><br><span class="line">如果在全局加要在window下</span><br><span class="line"></span><br><span class="line">监听用户下拉刷新事件。</span><br><span class="line">onPullDownRefresh: function() &#123;</span><br><span class="line">    </span><br><span class="line">    const &#123; arr &#125; = this.data</span><br><span class="line">    this.setData(&#123;</span><br><span class="line">      arr: arr.map(num =&gt; num * 2)</span><br><span class="line">    &#125;)</span><br><span class="line">    wx.stopPullDownRefresh()</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><hr><h2 id="上拉触发"><a href="#上拉触发" class="headerlink" title="上拉触发"></a>上拉触发</h2><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">onReachBottom</span><br></pre></td></tr></table></figure><hr><h2 id="获取全局globaData"><a href="#获取全局globaData" class="headerlink" title="获取全局globaData"></a>获取全局globaData</h2><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">const app=getApp()</span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      <categories>
          
          <category> 小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>webpack生产环境</title>
      <link href="/2019/05/22/webpack%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83/"/>
      <url>/2019/05/22/webpack%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<p>webpack 生产环境简单配置</p><a id="more"></a><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">const path = require(&quot;path&quot;)</span><br><span class="line">const HtmlWebpackPlugin = require(&quot;html-webpack-plugin&quot;)</span><br><span class="line">const CleanWebpackPlugin = require(&quot;clean-webpack-plugin&quot;)</span><br><span class="line">const VueLoaderPlugin = require(&quot;vue-loader/lib/plugin&quot;)</span><br><span class="line">const MiniCssExtractPlugin = require(&quot;mini-css-extract-plugin&quot;)</span><br><span class="line">module.exports = &#123;</span><br><span class="line">  // 模式  生产模式</span><br><span class="line">  mode: &quot;production&quot;,</span><br><span class="line">  devtool: &quot;none&quot;,</span><br><span class="line">  entry: &quot;./src/main.js&quot;,</span><br><span class="line">  output: &#123;</span><br><span class="line">    filename: &quot;js/[hash:5].bundle.js&quot;,</span><br><span class="line">    path: path.resolve(__dirname, &quot;./dist&quot;)</span><br><span class="line">  &#125;,</span><br><span class="line">  module: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      &#123;</span><br><span class="line">        // css 文件的规则</span><br><span class="line">        test: /(\.css|\.scss)$/,</span><br><span class="line">        // use: [&quot;style-loader&quot;, &quot;css-loader&quot;, &quot;sass-loader&quot;]</span><br><span class="line">        use: [</span><br><span class="line">          &quot;style-loader&quot;,</span><br><span class="line">          &#123;</span><br><span class="line">            loader: MiniCssExtractPlugin.loader,</span><br><span class="line">            options: &#123;</span><br><span class="line">              // you can specify a publicPath here</span><br><span class="line">              // by default it use publicPath in webpackOptions.output</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          &quot;css-loader&quot;,</span><br><span class="line">          &#123;</span><br><span class="line">            loader: &quot;postcss-loader&quot;,</span><br><span class="line">            options: &#123;</span><br><span class="line">              // autoprefixer 自动添加浏览器厂商前缀</span><br><span class="line">              // 从webpack高版本之后 autoprefixer 就必须带配置才能生效</span><br><span class="line">              // cssnano 压缩css</span><br><span class="line">              plugins: [</span><br><span class="line">                require(&quot;autoprefixer&quot;)(&#123;</span><br><span class="line">                  browsers: [</span><br><span class="line">                    &quot;&gt; 1%&quot;,</span><br><span class="line">                    &quot;last 2 versions&quot;,</span><br><span class="line">                    &quot;not ie &lt;= 8&quot;,</span><br><span class="line">                    &quot;ios &gt;= 8&quot;,</span><br><span class="line">                    &quot;android &gt;= 4.0&quot;</span><br><span class="line">                  ]</span><br><span class="line">                &#125;),</span><br><span class="line">                require(&quot;cssnano&quot;)</span><br><span class="line">              ]</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          &quot;sass-loader&quot;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        // vue 文件的规则</span><br><span class="line">        test: /\.vue$/,</span><br><span class="line">        use: [&quot;vue-loader&quot;]</span><br><span class="line">      &#125;,</span><br><span class="line">      // 图片当作模块引入</span><br><span class="line">      &#123;</span><br><span class="line">        test: /\.(png|jpg|gif)$/i,</span><br><span class="line">        use: [</span><br><span class="line">          &#123;</span><br><span class="line">            loader: &quot;url-loader&quot;,</span><br><span class="line">            options: &#123;</span><br><span class="line">              // 图片小于 8kb 自动转化为 base64 编码</span><br><span class="line">              //</span><br><span class="line">              limit: 8192,</span><br><span class="line">              name: &quot;images/[hash:8].[name].[ext]&quot;,</span><br><span class="line">              publicPath: &quot;/&quot;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  plugins: [</span><br><span class="line">    new CleanWebpackPlugin(),</span><br><span class="line">    new HtmlWebpackPlugin(&#123;</span><br><span class="line">      template: &quot;./public/index.html&quot;</span><br><span class="line">    &#125;),</span><br><span class="line">    new VueLoaderPlugin(),</span><br><span class="line">    new MiniCssExtractPlugin(&#123;</span><br><span class="line">      filename: &quot;css/[hash:5].[name].css&quot;,</span><br><span class="line">      chunkFilename: &quot;[id].css&quot;,</span><br><span class="line">      publicPath: &quot;/css&quot;</span><br><span class="line">    &#125;)</span><br><span class="line">  ],</span><br><span class="line">  resolve: &#123;</span><br><span class="line">    // 模块解析的时候可以忽略的扩展名</span><br><span class="line">    extensions: [&quot;.js&quot;, &quot;.json&quot;, &quot;.vue&quot;]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      <categories>
          
          <category> webpack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> webpack 生产环境配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>webpack开发</title>
      <link href="/2019/05/22/webpack%E5%BC%80%E5%8F%91/"/>
      <url>/2019/05/22/webpack%E5%BC%80%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<hr><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">const path = require(&quot;path&quot;)</span><br><span class="line">const HtmlWebpackPlugin = require(&quot;html-webpack-plugin&quot;)</span><br><span class="line">const CleanWebpackPlugin = require(&quot;clean-webpack-plugin&quot;)</span><br><span class="line">const webpack = require(&quot;webpack&quot;)</span><br><span class="line">const VueLoaderPlugin = require(&quot;vue-loader/lib/plugin&quot;)</span><br><span class="line">module.exports = &#123;</span><br><span class="line">  // 模式  开发模式</span><br><span class="line">  mode: &quot;development&quot;,</span><br><span class="line">  // 选择 开发工具  开发环境中推荐使用  eval  eval-source-map</span><br><span class="line">  devtool: &quot;eval-source-map&quot;,</span><br><span class="line">  devServer: &#123;</span><br><span class="line">    contentBase: &quot;./dist&quot;,</span><br><span class="line">    // 启用模块热替换，局部更新</span><br><span class="line">    hot: true,</span><br><span class="line">    // port: 8080,</span><br><span class="line">    // 减少浏览器控制台的一些提示信息</span><br><span class="line">    clientLogLevel: &quot;none&quot;,</span><br><span class="line">    // 将所有的 404 都指向 index.html</span><br><span class="line">    historyApiFallback: true</span><br><span class="line">  &#125;,</span><br><span class="line">  entry: &#123;</span><br><span class="line">    app: &quot;./src/main.js&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  output: &#123;</span><br><span class="line">    filename: &quot;[name].bundle.js&quot;,</span><br><span class="line">    path: path.resolve(__dirname, &quot;dist&quot;)</span><br><span class="line">  &#125;,</span><br><span class="line">  // module 模块</span><br><span class="line">  // 非js模块的导入需要 loader</span><br><span class="line">  // css 模块需要 style-loader  css-loader</span><br><span class="line">  // loader 的执行是有顺序的，由后往前</span><br><span class="line"></span><br><span class="line">  // 所有的 非 js 模块都被打包到了 xxx.bundle.js (css  images  font )</span><br><span class="line">  // 实现 css 分离</span><br><span class="line">  module: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      &#123;</span><br><span class="line">        // css 文件的规则</span><br><span class="line">        test: /(\.css|\.scss)$/,</span><br><span class="line">        use: [&quot;style-loader&quot;, &quot;css-loader&quot;, &quot;sass-loader&quot;]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        // vue 文件的规则</span><br><span class="line">        test: /\.vue$/,</span><br><span class="line">        use: [&quot;vue-loader&quot;]</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  // 插件plugin 给webpack添加一些其他功能</span><br><span class="line">  // HtmlWebpackPlugin 有可能你频繁的修改了入口文件或出口文件，导致 html 文件引入的 文件发生了改变，要频繁的修改</span><br><span class="line">  // 自动新建 html 自动引入文件,让你提供一个 html 模板</span><br><span class="line">  // clean-webpack-plugin 清理 dist 文件夹</span><br><span class="line">  // mini-css-extract-plugin</span><br><span class="line">  // 此插件将CSS提取到单独的文件中</span><br><span class="line">  plugins: [</span><br><span class="line">    new CleanWebpackPlugin(),</span><br><span class="line">    new HtmlWebpackPlugin(&#123;</span><br><span class="line">      template: &quot;./public/index.html&quot;</span><br><span class="line">    &#125;),</span><br><span class="line">    new webpack.HotModuleReplacementPlugin(),</span><br><span class="line">    new VueLoaderPlugin()</span><br><span class="line">  ],</span><br><span class="line">  resolve: &#123;</span><br><span class="line">    // 模块解析的时候可以忽略的扩展名</span><br><span class="line">    extensions: [&quot;.js&quot;, &quot;.json&quot;, &quot;.vue&quot;]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      <categories>
          
          <category> webpack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dev </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>webpack配置vue环境</title>
      <link href="/2019/05/21/webpack%E9%85%8D%E7%BD%AEvue%E7%8E%AF%E5%A2%83/"/>
      <url>/2019/05/21/webpack%E9%85%8D%E7%BD%AEvue%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<h2 id="安装-vue"><a href="#安装-vue" class="headerlink" title="安装 vue"></a>安装 vue</h2><hr><p>npm i vue</p><hr><a id="more"></a><h2 id="安装-vue-loader"><a href="#安装-vue-loader" class="headerlink" title="安装 vue-loader"></a>安装 vue-loader</h2><hr><p>你应该将 vue-loader 和 vue-template-compiler 一起安装——除非你是使用自行 fork 版本的 Vue 模板编译器的高阶用户：</p><p>npm i -D vue-loader vue-template-compiler</p><hr><hr><p>webpack 配置</p><p>webpack.config.js<br>const VueLoaderPlugin = require(‘vue-loader/lib/plugin’)</p><p>module.exports = {<br>module: {<br>rules: [</p><p>{<br>test: /.vue\$/,<br>loader: ‘vue-loader’<br>}<br>]<br>},<br>plugins: [</p><p>new VueLoaderPlugin()<br>]<br>}</p><hr><h2 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h2><hr><p>模块解析的时候可以省略扩展名</p><p>自动解析确定的扩展</p><p>webpack.config.js</p><p>module.exports = {</p><p>resolve: {<br>extensions: [‘.wasm’, ‘.vue’, ‘.js’, ‘.json’]<br>}<br>};</p><p>能够使用户在引入模块时不带扩展</p><hr><h2 id="sass-loader"><a href="#sass-loader" class="headerlink" title="sass-loader"></a>sass-loader</h2><hr><p>加载和转译 SASS/SCSS 文件</p><p>npm install sass-loader node-sass</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class="line"></span><br><span class="line">.hello&#123;</span><br><span class="line">    h1&#123;</span><br><span class="line">      color:rgb(103, 235, 70)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="devServer"><a href="#devServer" class="headerlink" title="devServer"></a>devServer</h2><hr><figure class="highlight plain"><figcaption><span>&#123;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">当使用 HTML5 History API 时，任意的 404 响应都可能需要被替代为 index.html</span><br><span class="line">devServer.historyApiFallback 默认禁用</span><br><span class="line">  historyApiFallback: true</span><br><span class="line">  </span><br><span class="line">当使用内联模式(inline mode)时，会在开发工具(DevTools)的控制台(console)显示消息，例如：在重新加载之前，在一个错误之前，或者 模块热替换(Hot Module Replacement) 启用时。默认值是 info。</span><br><span class="line"></span><br><span class="line">  clientLogLevel: &apos;none&apos;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      <categories>
          
          <category> webpack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>webpack</title>
      <link href="/2019/05/21/webpack/"/>
      <url>/2019/05/21/webpack/</url>
      
        <content type="html"><![CDATA[<h2 id="先将项目建成-npm-项目"><a href="#先将项目建成-npm-项目" class="headerlink" title="先将项目建成 npm 项目"></a>先将项目建成 npm 项目</h2><hr><p>npm init -y<br>npm i webpack -D<br>npm I webpack-cli</p><hr><a id="more"></a><h2 id="创建目录结构，文件和内容"><a href="#创建目录结构，文件和内容" class="headerlink" title="创建目录结构，文件和内容"></a>创建目录结构，文件和内容</h2><hr><p>创建 webpack.config.js</p><p>const path = require(‘path’);<br>module.exports = {<br>entry: ‘./src/index.js’,<br>output: {<br>filename: ‘main.js’,<br>path: path.resolve(__dirname, ‘dist’)<br>}<br>};</p><hr><h2 id="在命令行执行"><a href="#在命令行执行" class="headerlink" title="在命令行执行"></a>在命令行执行</h2><hr><p>npx webpack –config webpack.config.js<br>在 packjson scripts 中可以简写<br>“build”: “npx webpack –config webpack.config.js”</p><hr><h2 id="loader"><a href="#loader" class="headerlink" title="loader"></a>loader</h2><hr><p>module<br>非 js 模块的导入需要 loader<br>css 模块需要 css-loader style-loader</p><hr><h2 id="多入口-对应多出口"><a href="#多入口-对应多出口" class="headerlink" title="多入口 对应多出口"></a>多入口 对应多出口</h2><hr><p>const path = require(‘path’);<br>module.exports = {<br>entry: {<br>app: ‘./src/index.js’,<br>print: ‘./src/print.js’<br>},<br>output: {<br>filename: ‘[name].bundle.js’,<br>path: path.resolve(__dirname, ‘dist’)<br>}<br>};</p><hr><h2 id="设置-HtmlWebpackPlugin"><a href="#设置-HtmlWebpackPlugin" class="headerlink" title="设置 HtmlWebpackPlugin"></a>设置 HtmlWebpackPlugin</h2><hr><p>npm install –save-dev html-webpack-plugin</p><p>HtmlWebpackPlugin 还是会默认生成它自己的 index.html 文件。也就是说，它会用新生成的 index.html 文件，替换我们的原有文件。</p><p>HtmlWebpackPlugin<br>有可能频繁的修改入口文件或出口文件，导致 html 文件 引入的文件发生改变 ，要频繁修改</p><p>自动新建 html 自动引入文件， 可以提供一个 html 模板</p><p>new HtmlWebpackPlugin({<br>template:”./public/index.html”<br>})</p><hr><h2 id="清理-dist-文件夹-clean-webpack-plugin"><a href="#清理-dist-文件夹-clean-webpack-plugin" class="headerlink" title="清理 dist 文件夹 clean-webpack-plugin"></a>清理 dist 文件夹 clean-webpack-plugin</h2><hr><p>在每次构建前清理 /dist 文件夹，这样只会生成用到的文件<br>npm install –save-dev clean-webpack-plugin</p><hr><h2 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h2><hr><p>使用  source map<br>先将 mode 设置为 ‘development’,</p><p>当 webpack 打包源代码时，可能会很难追踪到 error(错误) 和 warning(警告) 在源代码中的原始位置</p><p>为了更容易地追踪 error 和 warning，JavaScript 提供了 source map 功能，可以将编译后的代码映射回原始源代码。如果一个错误来自于 b.js，source map 就会明确的告诉你</p><p>选择开发工具<br>开发环境推荐使用  eval   eval-source-map<br>devtool :”eval-source-map”</p><hr><h2 id="使用-watch-mode-观察模式"><a href="#使用-watch-mode-观察模式" class="headerlink" title="使用 watch mode(观察模式)"></a>使用 watch mode(观察模式)</h2><hr><p>package.json</p><p>你可以指示 webpack “watch” 依赖图中所有文件的更改。如果其中一个文件被更新，代码将被重新编译，所以你不必再去手动运行整个构建。</p><p>我们添加一个用于启动 webpack watch mode 的 npm scripts：</p><p>“watch”: “webpack –watch”,</p><p>在命令行中运行 npm run watch</p><hr><h2 id="使用-webpack-dev-server"><a href="#使用-webpack-dev-server" class="headerlink" title="使用 webpack-dev-server"></a>使用 webpack-dev-server</h2><hr><p>webpack-dev-server 为你提供了一个简单的 web server，并且具有 live reloading(实时重新加载) 功能</p><p>npm install –save-dev webpack-dev-server</p><p>webpack.config.js</p><p>devServer: {<br>    contentBase: ‘./dist’<br>  },</p><p>以上配置告知 webpack-dev-server，将 dist 目录下的文件 serve 到 localhost:8080 下</p><p>添加一个可以直接运行 dev server 的 script：<br>package.json</p><p>“start”: “webpack-dev-server –open”,</p><hr><h2 id="模块热替换"><a href="#模块热替换" class="headerlink" title="模块热替换"></a>模块热替换</h2><hr><p>局部更新</p><p>启用HMR</p><p>HMR 不适用于生产环境，这意味着它应当用于开发环境</p><p>new webpack.HotModuleReplacementPlugin()</p><hr>]]></content>
      
      
      <categories>
          
          <category> webpack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> webpack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue学习笔记</title>
      <link href="/2019/05/20/vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/05/20/vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="Element-ui"><a href="#Element-ui" class="headerlink" title="Element-ui"></a>Element-ui</h2><p><strong>1.安装</strong><br>npm i element-ui -S<br><strong>2.按需引入</strong><br>npm install babel-plugin-component -D</p><p><strong>3.修改 bable.config.js</strong></p><p>{ “presets”: [[“es2015”, { “modules”: false }]], “plugins”: [ [ “component”, { “libraryName”: “element-ui”, “styleLibraryName”: “theme-chalk” } ] ] }<br><strong>4.新建 element.js</strong><br>专门用来引入 element<br>5.main.js 引入</p><p><a href="https://freeydd.github.io/" target="_blank" rel="noopener">myblog</a></p><hr><a id="more"></a><hr><h2 id="git"><a href="#git" class="headerlink" title="git"></a>git</h2><hr><hr><h2 id="1-git-安装及默认设置"><a href="#1-git-安装及默认设置" class="headerlink" title="1.git 安装及默认设置"></a>1.git 安装及默认设置</h2><hr><hr><p><strong><em>安装 git</em></strong><br>在 linux 下直接使用命令：</p><p>sudo apt-get install git<br>windows 下百度 gitbash ，下载安装即可。</p><p>mac 下</p><p>brew install git<br>基本配置<br>配置个人的用户名称和电子邮件地址：</p><p>git config –global user.name “xxxx”<br>git config –global user.email “xxxx”<br>可以查看已有的配置信息</p><p>git config –list</p><hr><hr><hr><h2 id="2-工作流程"><a href="#2-工作流程" class="headerlink" title="2.工作流程"></a>2.工作流程</h2><hr><hr><p>克隆 Git 仓库作为工作目录（或者自己新建一个工作目录并初始化为 Git 仓库）。<br>增加资源及修改文件。<br>提交修改。<br>如果他人修改了代码，可以更新资源。 3.基本操作命令<br>git init<br>mkdir demo &amp;&amp; cd demo<br>git init<br>通过创建 demo 文件夹，git init 初始化，新建一个仓库。</p><p>git clone<br>如果在 github 上已经有了仓库，可以直接通过 git clone 将项目 clone 到本地。</p><p>git clone [仓库地址]<br>git diff<br>查看做了哪些修改。按 q 退出。</p><p>git add<br>git add 可以将文件添加到缓存去，获得 Git 的跟踪。</p><p>touch a.html<br>git add a.html<br>也可以通过加参数，将所有的文件添加到缓存区。下面的三种方式效果相同。</p><p>git add .<br>git add -A<br>git add *<br>git status<br>git status 可以查看当前版本库各个文件的状态。</p><p>git status<br>git commit<br>git commit 将缓存区内容添加到仓库中</p><p>git commit -m ‘版本留言，尽量写的语义话’<br>git log<br>查看提交记录。</p><p>git reset<br>取消已经缓存的内容。</p><p>git reset –hard HEAD<br>也可以通过版本号回滚</p><p>git reset –hard [版本号]<br>git rm<br>git rm 命令把一个文件删除，并把它从 git 的仓库管理系统中移除。</p><p>git rm readme.md<br>git checkout<br>取消对某个文件的修改，通过 git status 查看状态，然后执行 git checkout</p><p>git checkout 文件名</p><hr><hr><h2 id="3-推送代码"><a href="#3-推送代码" class="headerlink" title="3.推送代码"></a>3.推送代码</h2><hr><hr><p>首先，要在 github 上新建仓库，然后 clone 下来。</p><p>git push<br><em>首次推送</em><br>git push -u origin master<br><em>之后可以省略参数</em><br>git push<br>如果没有通过 clone 现有仓库，而是直接在本地 git init 的仓库的话，需要先添加远程仓库地址。</p><p><em>为这个仓库添加一个远程地址</em><br>git remote add origin [你的 github 上的仓库地址]<br>但是这里还有个问题，就是每次 push 都需要输入用户名和密码，很麻烦。这里需要设置下 ssh 。</p><p>设置 public key<br>首先需要在本地机器上生成 key。执行</p><p>ssh-keygen<br>这时，会在 ~/.ssh/ 文件夹之下生成一对 ssh key ，包括一个 public key 和一个 private key 。（如果是 windows 用户，这个文件一般会在这里：C:\Users\Administrator.ssh）</p><p>复制 public key</p><p>cat ~/.ssh/id_rsa.pub<br>将拷贝的 public key 添加在 github 账户上：</p><p>右上角点击头像-&gt; 点击 settings-&gt; 点击 SSH KEYS-&gt; 点击 ADD SSH KEYS-&gt; 将获取的 public key 粘贴于此</p><hr><hr><h2 id="4-分支操作"><a href="#4-分支操作" class="headerlink" title="4.分支操作"></a>4.分支操作</h2><hr><hr><p>创建新分支</p><p>git branch [yourbranch]<br>切换分支</p><p>git checkout [yourbranch]<br>或者直接创建一个分支，并且切换过去</p><p>git checkout -b [yourbranch]<br>删除分支</p><p>git branch -d [yourbranch]<br>推送分支</p><p>git push origin [yourbranch]</p><hr><hr><h2 id="5-分支更新及合并"><a href="#5-分支更新及合并" class="headerlink" title="5.分支更新及合并"></a>5.分支更新及合并</h2><hr><hr><p>拉取主分支上的更新</p><p>git pull origin master<br>合并其他分支代码</p><p>git merge [otherbranch]</p><hr>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue框架</title>
      <link href="/2019/05/20/vue%E6%A1%86%E6%9E%B6/"/>
      <url>/2019/05/20/vue%E6%A1%86%E6%9E%B6/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="Vue-框架"><a href="#Vue-框架" class="headerlink" title="Vue 框架"></a>Vue 框架</h2><p>之前使用 jquery 写页面,是直接操作了 dom 去处理页面的交互。vue react 等框架不是直接操作 dom，而是虚拟一个 dom 去操作，然后把最终结果渲染到页面。</p><h3 id="单页面应用-SPA"><a href="#单页面应用-SPA" class="headerlink" title="单页面应用(SPA)"></a>单页面应用(SPA)</h3><p>现在一些基础的框架默认都是制作单页面应用的。</p><a id="more"></a><h3 id="安装-vue-环境"><a href="#安装-vue-环境" class="headerlink" title="安装 vue 环境"></a>安装 vue 环境</h3><p>我们使用的是 vue-cli3 版本搭建 vue 的开发环境<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -g @vue/cli</span><br></pre></td></tr></table></figure></p><p>工具安装好之后，可以使用该工具搭建 vue 的环境了，使用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue create vue-hello</span><br></pre></td></tr></table></figure></p><p>创建了一个项目叫 vue-hello 里面搭建好了 vue 环境<br>创建的时候，你会被提示选取一个 preset。</p><ol><li>default(babel,eslint) 默认</li><li>Manually select features 自选<br>我们直接选择第一项，默认就会创建一个 vue-hello 项目，vue 会自动给做好一个 demo，我们自己手动修改一下这个 demo，在页面中展示一个 hello world<br>src 下有一个 main.js 文件，这个文件是入口文件</li></ol><hr>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/05/20/hello-world/"/>
      <url>/2019/05/20/hello-world/</url>
      
        <content type="html"><![CDATA[<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><a id="more"></a><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>js</title>
      <link href="/2019/02/20/%E4%BD%9C%E7%94%A8%E5%9F%9F/"/>
      <url>/2019/02/20/%E4%BD%9C%E7%94%A8%E5%9F%9F/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="js-运行三部曲"><a href="#js-运行三部曲" class="headerlink" title="js 运行三部曲"></a>js 运行三部曲</h2><h3 id="语法分析"><a href="#语法分析" class="headerlink" title="语法分析"></a>语法分析</h3><a id="more"></a><h3 id="预编译"><a href="#预编译" class="headerlink" title="预编译"></a>预编译</h3><pre><code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">解释性语言</span><br><span class="line">函数声明整体提升</span><br><span class="line">变量   声明提升</span><br><span class="line">如果变量未经声明就赋值，变量就为全局对象所有。</span><br><span class="line">一切声明的全局变量，全是 window 的属性。</span><br><span class="line">window 就是全局</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">预编译发生在函数执行前一刻</span><br><span class="line">函数预编译</span><br><span class="line">1.创建AO对象</span><br><span class="line">2.找形参和变量声明，将便变量和形参名作为 AO 属性名，值为 undefined</span><br><span class="line">3.将实参值和形参统一</span><br><span class="line">4.在函数体里面找函数声明，值赋予函数体</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">全局预编译</span><br><span class="line">1.创建GO对象</span><br><span class="line">2.找变量声明，将便变量作为 GO 属性名</span><br><span class="line">3.在函数体里面找函数声明，值赋予函数体</span><br></pre></td></tr></table></figure></code></pre><h3 id="解释执行"><a href="#解释执行" class="headerlink" title="解释执行"></a>解释执行</h3><h2 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">函数每次执行时对应的执行上下文都是独一味二的，多次调用一个函数会导致创建多个执行上下文，当函数执行完毕，它所产生的执行上下文被销毁</span><br></pre></td></tr></table></figure><h2 id="闭包"><a href="#闭包" class="headerlink" title="闭包"></a>闭包</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">内部函数被保存到外部时，将会生成闭包。闭包会导致原有作用域链不释放，造成内存泄露。</span><br><span class="line"></span><br><span class="line">闭包作用</span><br><span class="line">1. 实现公有变量</span><br><span class="line">eg :函数累加器</span><br><span class="line">function add()&#123;</span><br><span class="line">  var count=0</span><br><span class="line">  function demo()&#123;</span><br><span class="line">    count ++ ;</span><br><span class="line">    console.log(count)</span><br><span class="line">  &#125;</span><br><span class="line">  return demo</span><br><span class="line">&#125;</span><br><span class="line">var counter=add();</span><br><span class="line">counter();</span><br><span class="line">counter();</span><br><span class="line"></span><br><span class="line">2.可以做缓存</span><br><span class="line"></span><br><span class="line">3.实现封装，属性私有化</span><br><span class="line"></span><br><span class="line">4.模块化开发，防止污染全局变量</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function a()&#123;</span><br><span class="line"> var num =100</span><br><span class="line"> function b()&#123;</span><br><span class="line">   num++</span><br><span class="line">   console.log(num)</span><br><span class="line"> &#125;</span><br><span class="line"> return b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var demo=a()</span><br><span class="line">demo()</span><br><span class="line">demo()</span><br></pre></td></tr></table></figure><h2 id="立即执行函数"><a href="#立即执行函数" class="headerlink" title="立即执行函数"></a>立即执行函数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">针对初始化功能的函数</span><br><span class="line">(function ()&#123;</span><br><span class="line">var a=123;</span><br><span class="line">var b=234;</span><br><span class="line">console.log(a+b)</span><br><span class="line">&#125;())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">var num =(function(a,b,c)&#123;</span><br><span class="line">var d=a+b+c</span><br><span class="line">return d</span><br><span class="line">&#125;(1,2,3))</span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
